femaleMW = read.csv("femaleMiceWeights.csv")
str(femaleMW)
femaleMW[12,2]
femaleMW$Bodyweight[12]
femaleMW$Bodyweight[11]
length(femaleMW$Bodyweight)
mean(femaleMW[Diet=="hf",]$Bodyweight)
mean(femaleMW[femaleMW$Diet=="hf",]$Bodyweight)
?sample
sample(13:24, 1)
set.seed(1)
sample(13:24, 1)
sample(13:24, 1)
sample(13:24, 1)
set.seed(1)
sample(13:24, 1)
version
sample(13:24, 1)
set.seed(1)
sample(13:24, 1)
femaleMW$Bodyweight[16]
install.packages("dplyr")
library(dplyr)
library(downloader)
url="https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/msleep_ggplot2.csv"
filename <- basename(url)
download(url,filename)
install.packages("downloader")
library(downloader)
url="https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/msleep_ggplot2.csv"
filename <- basename(url)
download(url,filename)
dat=read.csv("msleep_ggplot2.csv")
class(dat)
str(dat)
table(dat$genus)
table(dat$vore)
view(dat)
head(dat)
table(dat$order)
prim= select(dat, order=="Primates")
prim= select(dat, order="Primates")
prim= filter(dat, order=="Primates")
class(prim)
prim= filter(dat, order=="Primates") %>% select(sleep_total)
class(prim)
prim= filter(dat, order=="Primates") %>% select(sleep_total) %>% unlist
class(prim)
filter(dat, order=="Primates") %>% select(sleep_total) %>% unlist
mean(filter(dat, order=="Primates") %>% select(sleep_total) %>% unlist)
?summarize
summarize(filter(dat, order=="Primates")0
summarise(filter(dat, order=="Primates")
)
filter(dat, order=="Primates")
summarise(filter(dat, order=="Primates"), mean)
summarise(filter(dat, order=="Primates"), mean(order))
summarise(filter(dat, order=="Primates"), mean(sleep_total))
dat = read.csv("femaleMiceWeights.csv")
str(dat)
dat=read.csv("femaleControlsPopulation.csv")
summary(dat)
set.seed(1)
sam=sample(dat, 5)
sam=sample(dat$Bodyweight, 5)
abs(mean(sam)-mean(dat$Bodyweight))
set.seed(5)
sam=sample(dat$Bodyweight, 5)
abs(mean(sam)-mean(dat$Bodyweight))
dat=read.csv("femaleControlsPopulation.csv")
set.seed(1)
avgs=[]
avgs=vector()
avgs=vector("numeric")
for (i in 1:n){ avgs[i]=mean(sample(dat,5))}
for (i in 1:n){ avgs[i]=mean(sample(dat,5)$Bodyweight)}
class(sample(dat,5))
class(sample(dat$Bodyweight,5))
for (i in 1:n){ avgs[i]=mean(sample(dat$Bodyweight,5))}
for (i in 1:n){
avgs[i]=mean(sample(dat$Bodyweight,5))
}
n=1000
avgs=vector("numeric",n)
for (i in 1:n){
avgs[i]=mean(sample(dat$Bodyweight,5))
}
sum(abs(avgs-mean(dat$Bodyweight))>1)/n
set.seed(1)
n=10000
avgs=vector("numeric",n)
for (i in 1:n){
avgs[i]=mean(sample(dat$Bodyweight,5))
}
sum(abs(avgs-mean(dat$Bodyweight))>1)/n
set.seed(1)
n=10000
avgs=vector("numeric",n)
for (i in 1:n){
avgs[i]=mean(sample(dat$Bodyweight,50))
}
sum(abs(avgs-mean(dat$Bodyweight))>1)/n
install.packages("gapminder")
library()
library(gapminder)
data("gapminder")
head(gapminder)
x=gapminder[year==1952,]
x=gapminder[gapminder$year==1952,]
summary(x)
x=gapminder[gapminder$year==1952,c("country","lifeExp")]
summary(x)
hist(x$lifeExp)
mean(x$lifeExp <= 41)
mean(x$lifeExp <= 40)
mean(x$lifeExp <= 60) - mean(x$lifeExp <= 40)
prop = function(q) {
mean(x <= q)
}
summary(prop)
class(prop)
prop(40)
prop = function(q) {
mean(x$lifeExp <= q)
}
class(prop)
prop(40)
x=gapminder[gapminder$year==1952,gapminder$lifeExp]
summary(x)
hist(x$lifeExp)
hist(x)
head(gapminder)
x=gapminder[gapminder$year==1952,]
summary(x)
x=x[,x$lifeExp]
summary(x)
hist(x)
x=gapminder[gapminder$year==1952,]
head(x)
x[,x$lifeExp]
x[,4]
summary(x)
x=x[,4]
summary(x)
hist(x)
x=as.vector(x[,4])
summary(x)
hist(x)
str(x)
y=x[,4]
str(y)
y=x[[,4]]
y=x[[x$lifeExp]]
y=x[x$lifeExp]
str(y)
y=as.vector(x[x$lifeExp])
str(y)
y.v=as.vector(x[x$lifeExp])
str(y)
hist(x$lifeExp)
x=gapminder[gapminder$year==1952,]
head(x)
summary(x)
hist(x$lifeExp)
prop = function(q) {
mean(x$lifeExp <= q)
}
class(prop)
prop(40)
qs = seq(from=min(x), to=max(x), length=20)
qs = seq(from=min(x$lifeExp), to=max(x$lifeExp), length=20)
props=sapply(qs,prop)
?sapply
props
plot(qs,props)
props = sapply(qs, function(q) mean(x$lifeExp <= q))
plot(ecdf(x$lifeExp))
dat=read.csv("femaleControlsPopulation.csv")
summary(dat)
set.seed(1)
avgs=vector("numeric", 1000)
avgs5=vector("numeric", 1000)
n=1000
avgs5=vector("numeric", 1000)
n=1000
for (i in 1:n){
avgs5[i]=mean(sample(dat,5))
}
n=1000
for (i in 1:n){
avgs5[i]=mean(sample(dat$Bodyweight,5))
}
avgs50=vecotr("numeric",1000)
avgs50=vector("numeric",1000)
for (i in 1:n){
avgs50[i]=mean(sample(dat$Bodyweight,5))
}
hist(avgs5)
hist(avgs50)
hist(avgs5)
hist(avgs50)
hist(avgs5)
hist(avgs50)
hist(avgs5)
hist(avgs50)
mean(avgs50<=25)-mean(avgs50<=23)
avgs50=vector("numeric",1000)
for (i in 1:n){
avgs50[i]=mean(sample(dat$Bodyweight,50))
}
hist(avgs5)
hist(avgs50)
mean(avgs50<=25)-mean(avgs50<=23)
hist(avgs5)
hist(avgs50)
mean(avgs50<=25)-mean(avgs50<=23)
?ecdf
z23=(23-23.9)/0.43
z25=(25-23.9)/0.43
z25-z23
ecdf
?ecdf
?rnorm
?norm
?Normal
dnorm(23.9,0.43)
pnorm(25,23.9,0.43)
pnorm(25,23.9,0.43)-pnorm(23,23.9,0.43)
z25-z23
4.651163
pnorm(z25)-pnorm(z23)
dat=read.csv("mice_pheno.csv")
dat=na.omit(dat)
dat=na.omit(dat)
dat=read.csv("mice_pheno.csv")
dat=na.omit(dat)
str(dat)
mean(dat[dat$Sex=="M" & dat$Diet=="chow",])
mean(dat[dat$Sex=="M" & dat$Diet=="chow",]$Bodyweight)
sd(dat[dat$Sex=="M" & dat$Diet=="chow",]$Bodyweight)
set.seed(1)
X=sample(dat$Bodyweight, 5)
mean(X)
malechow=dat[dat$Sex=="M" & dat$Diet=="chow",]
X=sample(malechow$Bodyweight, 5)
mean(X)
set.seed(1)
X=sample(malechow$Bodyweight, 25)
mean(X)
