sd(ts)
})
mn
md
md-mn
1/sqrt(Ns)
md
set.seed(1)
meanmed<-sapply(Ns, function(N){
ts <- replicate(B, {
X <- rnorm(N)
#    sqrt(N)*median(X)/sd(X)
median(X)
})
mean(ts)
})
meanmed
Ns<-c(5, 10, 50, 1000, 10000, 20000)
B <- 1000
mypar(3,2)
LIM <- c(-4.5,4.5)
set.seed(1)
mn.sd<-sapply(Ns,function(N){
ts <- replicate(B, {
X <- rnorm(N)
#    sqrt(N)*median(X)/sd(X)
mean(X)
})
sd(ts)
})
set.seed(1)
md.sd<-sapply(Ns, function(N){
ts <- replicate(B, {
X <- rnorm(N)
#    sqrt(N)*median(X)/sd(X)
median(X)
})
sd(ts)
})
set.seed(1)
md.mean<-sapply(Ns, function(N){
ts <- replicate(B, {
X <- rnorm(N)
#    sqrt(N)*median(X)/sd(X)
median(X)
})
mean(ts)
})
mn.sd
#[1] 0.463164960 0.307540795 0.142648147 0.031244522 0.009817387 0.006968280
md.sd
#[1] 0.541248504 0.354307837 0.175427479 0.039361979 0.012388655 0.008616991
md.sd-mn.sd
#[1] 0.078083544 0.046767042 0.032779332 0.008117457 0.002571268 0.001648711
1/sqrt(Ns)
md.sd
md.mean
set.seed(1)
Ns <- seq(5,45,5)
library(rafalib)
mypar(3,3)
for(N in Ns){
medians <- replicate(10000, median ( rnorm(N) ) )
title <- paste("N=",N,", avg=",round( mean(medians), 2) , ", sd*sqrt(N)=", round( sd(medians)*sqrt(N),2) )
qqnorm(medians, main = title )
qqline(medians)
}
?dnorm
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- babies[smoke==0,]
bwt.nonsmoke <- babies[babies$smoke==0,]
bwt.smoke <- babies[babies$smoke==1,]
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- babies[babies$smoke==0,]
bwt.smoke <- babies[babies$smoke==1,]
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
library(rafa)
install.packages()
install.packages("rafa")
install.packages("rafa")
installed.packages("*")
installed.packages
installed.packages()
library(rafalib)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- babies[babies$smoke==0,]
bwt.smoke <- babies[babies$smoke==1,]
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
?sample
bwt.nonsmoke <- babies[babies$smoke==0,babies$bwt]
bwt.nonsmoke <- babies[babies$smoke==0,babies$bwt]
bwt.nonsmoke <- babies[babies$smoke==0,]$bwt
bwt.smoke <- babies[babies$smoke==1,]$bwt
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
set.seed(1)
?null
set.seed(1)
null<-replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
})
hist(null)
t.stat(null)
t.test(null)
?test
?t.test
mypar(1)
hist(null)
obs
mypar(1,2)
hist(null)
t.test(null)
qqnorm(null)
abline(0,1)
sum(null<obs)
sum(null<obs)/sum(null)
abs(sum(null<obs)/sum(null))
abs(nrow(null<obs)/nrow(null))
length(null<obs)/length(null)
length(null<obs)
str(null)
length(null[null<obs])
null<obs
mean(null<obs)
# reshufle the data
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
set.seed(1)
null<-replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
})
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
set.seed(1)
null<-replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
})
mypar(1,2)
hist(null)
mean(null<obs)
mean(null<-19.1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
# reshufle the data
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
obs2<-mean(smokersstar)-mean(nonsmokersstar)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
obs2<-mean(smokersstar)-mean(nonsmokersstar)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
obs2<-mean(smokersstar)-mean(nonsmokersstar)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
obs2<-mean(smokersstar)-mean(nonsmokersstar)
set.seed(1)
null<-replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
})
mypar(1,2)
hist(null)
mean(null<obs)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
# reshufle the data
dat <- c(smokers,nonsmokers)
set.seed(1)
null<-replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
})
mypar(1,1)
hist(null)
abline(v=obs, col="red", lwd=2)
mean(null<obs)
mean(null<=obs)
(sum(abs(null) > abs(obs))+1) / (length(null)+1)
0.027*2
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
# reshufle the data
dat <- c(smokers,nonsmokers)
set.seed(1)
null<-replicate(1000, {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
median(smokersstar)-median(nonsmokersstar)
})
mypar(1,1)
hist(null)
abline(v=obs, col="red", lwd=2)
mean(null<=obs)
# The proportion of permutaions with larger difference
(sum(abs(null) > abs(obs))+1) / (length(null)+1)
d = read.csv("assoctest.csv")
head(d)
16/70
1/70
table(d$allele,d$case)
t=table(d$allele,d$case)
t
?rep
rep(1:4,2)
t=table(d$allele)
t
t=table(d$allele,d$case)
t
re(0,5)
rep(0,5)
c(rep(0,5),rep(1,7), rep(0,3))
factor(c(rep(0,5),rep(1,7), rep(0,3)))
b=factor(c(rep(0,5),rep(1,7), rep(0,3)))
b=factor(c(rep(0,5),rep(1,7), rep(0,3)), labels=c("x","y"))
b
table(d$allele)
table(d$case)
table(d$allele, d$case)
p=mean(d$case==1)
p
t=table(d$allele, d$case)
chisq.test(t)$p_value
t=table(d$allele, d$case)
t
chisq.test(t)$p_value
chisq.test(t)
chisq.test(t)$p-value
fisher.test(t)
load("skew.RData")
dim(dat)
par(mfrow = c(3,3))
summary(dat)
dat[,1]
for (i in 1:9) {
qqnorm(dat[,i])
}
par(mfrow=c(1,1))
par(mfrow=c(1,2))
hist(dat[,4])
hist(dat[,9])
str(dat)
head(InsectSprays)
str(InsectSprays)
?split
?boxplot
boxplot(split(values, factor))
values=InsectSprays
boxplot(split(values, factor))
boxplot(split(InsectSprays, InsectSprays$spray)
boxplot(split(InsectSprays, InsectSprays$spray))
t=split(InsectSprays, InsectSprays$spray)
?split
t
summary(InsectSprays)
nrow(InsectSprays)
t=split(InsectSprays, InsectSprays$spray)
t
boxplot(t)
boxplot(t, InsectSprays$spray)
boxplot(t$count, t$spray)
boxplot(t$count, t$spray)
boxplot(t$count ~ t$spray)
boxplot(InsectSprays$count ~ InsectSprays$spray)
par(mfrow=c(1,1))
boxplot(InsectSprays$count ~ InsectSprays$spray)
boxplot(split(InsectSprays, InsectSprays$spray))
plot(split(InsectSprays, InsectSprays$spray))
boxplot(split(InsectSprays, InsectSprays$spray), InsectSprays$spray)
library(dplyr)
data(nym.2002, package="UsingR")
install.packages("UsingR")
library(dplyr)
data(nym.2002, package="UsingR")
summary(nym.2002)
?data
boxplot(nym.2001$time ~ nym.2002$gender)
boxplot(nym.2002$time ~ nym.2002$gender)
summary(nym.2002)
str(nym.2002)
head(nym.2002)
par(mfrow=c(1,1,2,3))
layount(matrix(c(1,1,2,3)))
layout(matrix(c(1,1,2,3)))
boxplot(nym.2002$time ~ nym.2002$gender)
hist(nym.2002[gender=="Male",]$time, main="Male")
hist(nym.2002[nym.2002$gender=="Male",]$time, main="Male")
?layout
layout(matrix(c(1,1,2,3)),byrow=TRUE)
layout(matrix(c(1,1,2,3),byrow=TRUE)
layout(matrix(c(1,1,2,3),byrow=TRUE))
boxplot(nym.2002$time ~ nym.2002$gender)
layout(matrix(c(1,1,2,3),byrow=TRUE))
boxplot(nym.2002$time ~ nym.2002$gender)
hist(nym.2002[nym.2002$gender=="Male",]$time, main="Male")
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE))
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE))
boxplot(nym.2002$time ~ nym.2002$gender)
hist(nym.2002[nym.2002$gender=="Male",]$time, main="Male")
hist(nym.2002[nym.2002$gender=="Female",]$time, main="Female")
layout(matrix(c(1,1,2,3),2,2,byrow=TRUE))
boxplot(nym.2002$time ~ nym.2002$gender)
hist(nym.2002[nym.2002$gender=="Female",]$time, main="Female")
hist(nym.2002[nym.2002$gender=="Male",]$time, main="Male")
summary(nym.2002)
summary(nym.2002[])
mypar(1,3)
males <- filter(nym.2002, gender=="Male") %>% select(time) %>% unlist
females <- filter(nym.2002, gender=="Female") %>% select(time) %>% unlist
boxplot(females, males)
hist(females,xlim=c(range( nym.2002$time)))
hist(males,xlim=c(range( nym.2002$time)))
data("father.son")
data("father.son", package="UsingR")
summary(father.son)
x=father.son$fheight
y=father.son$sheight
plot(x,y, xlab="Father's height in inches",ylab="Son's height in inches")
mypar(1,1)
plot(x,y, xlab="Father's height in inches",ylab="Son's height in inches")
split(y,round(x))
boxplot(split(y,round(x)))
print(mean(y[round(x)==72]))
?tapply
x=(x-mean(x))/sd(x)
y=(y-mean(y))/sd(y)
x
round(x*4)
round(0.5)
round(0.6)
round(4*0.5)
round(4*0.5)/4
round(4*0.7)/4
round(4*1.7)/4
round(4*x)/4
round(4*x)/4 > 2
means=(tapply(y, round(x*4)/4, mean))
means
fatherheights=as.numeric(names(means))
plot(fatherheights, means, ylab="average of strata son height")
abline(0,cor(x,y))
a=rnorm(100); a[1]=25
b=rnorm(100); b[1]=25
# example
a=rnorm(100); a[1]=25
b=rnorm(100); b[1]=26
plot(a,b, main=paste("correlation=", cor(a,b)))
plot(a,b, main=paste("correlation=", round(cor(a,b), digits = 2))
plot(a,b, main=paste("correlation=", round(cor(a,b), digits = 2))
plot(a,b, main=paste("correlation=", round(cor(a,b), digits = 2)))
set.seed(1)
a=rnorm(100); a[1]=25
b=rnorm(100); b[1]=26
plot(a,b, main=paste("correlation=", round(cor(a,b), digits = 2)))
cor(a,b, method = "spearman")
summary(nym.2002)
males=subset(nym.2002, gender=="Male")
females=subset(nym.2002, gender=="Female")
cor(males$age, males$time)
cor(females$age, females$time)
mypar(1,2)
plot(males$time, male$age)
plot(males$time, males$age)
plot(males$age, males$times)
mypar(1,2)
plot(males$age, males$times)
plot(males$times, males$age)
plot(males$time, males$age)
mypar(1,2)
plot(males$time, males$age)
boxplots(split(males$time, males$age))
boxplot(split(males$time, males$age))
?round
?div
?%
23%5
mod(23,5)
?mod
23%%5
23%/%5
23%/%5*5
mypar(1,2)
plot(males$time, males$age)
boxplot(split(males$time, males$age%/%5*5))
mypar(1,2)
plot(males$time, males$age%/%5*5)
boxplot(split(males$time, males$age%/%5*5))
mypar(1,2)
plot(males$age%/%5*5, males$time)
boxplot(split(males$time, males$age%/%5*5))
25%/%5*5
30%/%5*5
31%/%5*5
34%/%5*5
taaply(males$time, males$age%/%5*5, mean)
tapply(males$time, males$age%/%5*5, mean)
round(tapply(males$time, males$age%/%5*5, mean))
?shift
r=round(tapply(males$time, males$age%/%5*5, mean))
mean(r)
r[i]-r[i-1]
time = sort(nym.2002$time)
time[1000]
time[1]/median(time)
time[1000]/median(time)
plot(time/median(time), ylim=c(1/4,4))
abline(h=c(1/2,1,2))
plot(log2(time/median(time)),ylim=c(-2,2))
abline(h=-1:1)
data("ChickWeight")
head(ChickWeight)
mypat(1,1)
data("ChickWeight")
head(ChickWeight)
plot( ChickWeight$Time, ChickWeight$weight, col=ChickWeight$Diet)
chick = reshape(ChickWeight, idvar=c("Chick","Diet"), timevar="Time",
direction="wide")
head(chick)
chick=na.omit(chick)
day4=chick$weight.4
day4out=c(day4, 3000)
day4out[46]
mean(day4out)/mean(day4)
median(day4out)/median(day4)
sd(day4out)/sd(day4)
mad(day4out)/mad(day4)
day21=chick$weight.21
day21out=c(day21, 3000)
cor(day4,day21)
cor(day4out,day21out)/cor(day4,day21)
x=chick[,chick$Diet==1]$weight.4
x=chick[,chick$diet==1]$weight.4
head(chick)
x=chick[,chick$Diet==1]$weight.4
x=chick[,Diet==1]$weight.4
x=subset(chick, chickDiet==1)$weight.4
x=subset(chick, chick$Diet==1)$weight.4
head(chick)
head(x)
y=subset(chick, chick$Diet==4)$weight.4
t.test(x,y)
wilcox.test(x,y)
x.out=c(x,200)
t.test(x.out, y)$p.value
wilcox.test(x.out,y)$p.value
library(rafalib)
mypar(1,3)
boxplot(x,y)
boxplot(x,y+10)
boxplot(x,y+100)
t.test(x,y+10)$statistic
t.test(x,y+100)$statistic
t.test(x,y+10)$statistic - t.test(x,y+100)$statistic
z=c(1,2,3)
w=c(4,5,6)
wilcox.test(z,w)
v=c(400,500,600)
wilcox.test(z,v)
wilcox.test(z,v)$p.value
wilcox.test(z,w)$p.value
